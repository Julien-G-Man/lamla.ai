# Generated by Django 5.2.1 on 2025-06-28 19:33

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('slides_analyzer', '0002_questioncache_question_content_hash_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name='question',
            old_name='text',
            new_name='question_text',
        ),
        migrations.RenameField(
            model_name='questioncache',
            old_name='content_hash',
            new_name='question_content_hash',
        ),
        migrations.RemoveField(
            model_name='question',
            name='content_hash',
        ),
        migrations.RemoveField(
            model_name='question',
            name='correct_answer',
        ),
        migrations.RemoveField(
            model_name='question',
            name='difficulty',
        ),
        migrations.RemoveField(
            model_name='question',
            name='option_a',
        ),
        migrations.RemoveField(
            model_name='question',
            name='option_b',
        ),
        migrations.RemoveField(
            model_name='question',
            name='option_c',
        ),
        migrations.RemoveField(
            model_name='question',
            name='option_d',
        ),
        migrations.RemoveField(
            model_name='question',
            name='quiz',
        ),
        migrations.RemoveField(
            model_name='question',
            name='times_used',
        ),
        migrations.RemoveField(
            model_name='questioncache',
            name='questions',
        ),
        migrations.AddField(
            model_name='question',
            name='answer',
            field=models.TextField(default='N/A'),
        ),
        migrations.AddField(
            model_name='question',
            name='options',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='questioncache',
            name='answer',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='questioncache',
            name='options',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='questioncache',
            name='question_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='questioncache',
            name='question_type',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='quiz',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='question',
            name='question_type',
            field=models.CharField(choices=[('mcq', 'Multiple Choice'), ('short', 'Short Answer')], default='mcq', max_length=20),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('feedback_text', models.TextField(blank=True)),
                ('feedback_type', models.CharField(choices=[('general', 'General Feedback'), ('quiz', 'Quiz Feedback'), ('bug', 'Bug Report'), ('feature', 'Feature Request')], default='general', max_length=20)),
                ('page_url', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
